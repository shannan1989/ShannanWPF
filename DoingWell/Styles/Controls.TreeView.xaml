<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:Shannan.DoingWell.Controls">

    <Style TargetType="{x:Type TreeView}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeView}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="sv" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" CanContentScroll="False" Focusable="False">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="border" Value="#ddd"/>
                        </Trigger>
                        <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                            <Setter Property="CanContentScroll" TargetName="sv" Value="True"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#999"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Border x:Name="border" BorderThickness="0,0,0,1" BorderBrush="#302e2e">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition x:Name="R1" Height="42"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>

                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <StackPanel Orientation="Horizontal" Margin="12,0,0,0">
                                    <Image x:Name="ItemIcon" Stretch="Uniform" Width="8" Height="8" Margin="12,0,0,0" Source="pack://application:,,,/Images/Styles/treeviewitem_icon.png" Visibility="Collapsed"/>
                                    <ContentPresenter x:Name="PART_Header" Content="{TemplateBinding Header}" ContentSource="Header" ContentTemplate="{TemplateBinding HeaderTemplate}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="8,0,0,0"/>
                                </StackPanel>
                            </Border>
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded,RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Focusable" Value="False"/>
                                        <Setter Property="Cursor" Value="Hand"/>
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border Background="Transparent" Padding="10,5">
                                                        <Image x:Name="ExpanderImage" Width="20" Height="20" HorizontalAlignment="Right" Stretch="Uniform" Source="pack://application:,,,/Images/Styles/expander_arrow_down.png"/>
                                                    </Border>

                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter TargetName="ExpanderImage" Property="Source" Value="pack://application:,,,/Images/Styles/expander_arrow_up.png"/>
                                                        </Trigger>
                                                        <Trigger Property="IsMouseOver" Value="True"/>
                                                        <MultiTrigger>
                                                            <MultiTrigger.Conditions>
                                                                <Condition Property="IsMouseOver" Value="True"/>
                                                                <Condition Property="IsChecked" Value="True"/>
                                                            </MultiTrigger.Conditions>
                                                        </MultiTrigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>
                            </ToggleButton>
                            <ItemsPresenter x:Name="ItemsHost" Grid.Row="1"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="border" Property="BorderThickness" Value="0"/>
                            <Setter TargetName="Expander" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="R1" Property="Height" Value="38"/>
                            <Setter TargetName="ItemIcon" Property="Visibility" Value="Visible"/>
                            <Setter Property="Foreground" Value="#fff"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="Transparent"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="3,0,0,0"/>
                            <Setter TargetName="Bd" Property="Cursor" Value="Hand"/>
                        </Trigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasItems" Value="false"/>
                                <Condition Property="IsSelected" Value="true"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ItemIcon" Property="Source" Value="pack://application:,,,/Images/Styles/treeviewitem_icon_selected.png"/>
                            <Setter Property="Foreground" Value="#da3610"/>
                            <Setter TargetName="Bd" Property="Background" Value="#fff"/>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="#da3610"/>
                        </MultiTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#ddd"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>